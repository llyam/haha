class Solution {
public:
    map<char, string> m;
    map<string, char> a;
    bool wordPattern(string pattern, string s) {
        string buf;
        stringstream ss(s);
        vector<string> tokens;
        while (ss >> buf) tokens.push_back(buf);
        if (tokens.size() != pattern.size()) return false;
        for (int i = 0; i < pattern.size(); ++i) {
            char p = pattern[i];
            string str = tokens[i];
            if (a.find(str) == a.end()) {
                a[str] = p;
            } else if (a[str] != p) return false;
            if (m.find(p) == m.end()) {
                m[p] = tokens[i];
            } else if (m[p] != tokens[i]) return false;
        }
        return true;
    }
};
